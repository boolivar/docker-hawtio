plugins {
    id "base"
    id "com.bmuschko.docker-remote-api" version "9.4.0"
}

repositories {
    mavenCentral()
}

configurations {
    hawtio {
        canBeConsumed = false
        canBeResolved = false
        transitive = false
    }
}

dependencies {
    hawtio "io.hawt:hawtio-jbang:3.0.0"
}

docker {
    registryCredentials {
        username = dockerhubUser
        password = dockerhubPass
    }
}

version configurations.hawtio.dependencies.version[0]

final image = "boolivar/hawtio:$version"

tasks.register("version") {
    doLast {
        print version
    }
}

tasks.register("dockerBuildImage", com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    inputDir = rootDir
    images = [image]
    buildArgs = [HAWTIO_VERSION: "hawtio-$version", JAVA_VERSION: javaVersion]
}

tasks.register("dockerPushImage", com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
    images = [image]
}

tasks.register("createContainer", com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer) {
    mustRunAfter dockerBuildImage
    targetImageId image
    hostConfig.with {
        portBindings = ["8080:8080"]
        autoRemove = true
    }
}

tasks.register("startContainer", com.bmuschko.gradle.docker.tasks.container.DockerStartContainer) {
    dependsOn createContainer
    targetContainerId createContainer.getContainerId()
}

tasks.register("stopContainer", com.bmuschko.gradle.docker.tasks.container.DockerStopContainer) {
    targetContainerId createContainer.getContainerId()
}

tasks.register("testContainer") {
    dependsOn startContainer
    finalizedBy stopContainer
    doLast {
        def error = null
        for (int i = 0; i < 10; ++i) {
            try {
                assert new URL("http://localhost:8080/hawtio").openConnection().responseCode == 200
                return
            } catch (Exception e) {
                error = e
                Thread.sleep(1000)
            }
        }
        throw error
    }
}

tasks.named("assemble") {
    dependsOn dockerBuildImage
}

tasks.named("check") {
    dependsOn testContainer
}
